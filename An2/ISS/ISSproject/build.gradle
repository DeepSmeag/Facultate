plugins {
    id 'java'
    id 'application'
    id 'org.openjfx.javafxplugin' version '0.0.10'
    id 'org.beryx.jlink' version '2.24.1'
    id "org.hibernate.orm" version "6.2.2.Final"
}

group 'com.example'
version '1.0-SNAPSHOT'

repositories {
    mavenCentral()
}

ext {
    junitVersion = '5.8.2'
}

sourceCompatibility = '17'
targetCompatibility = '17'

tasks.withType(JavaCompile) {
    options.encoding = 'UTF-8'
}

application {
    mainModule = 'com.example.issproject'
    mainClass = 'com.example.issproject.HelloApplication'
}

javafx {
    version = '17.0.1'
    modules = ['javafx.controls', 'javafx.fxml']
}

dependencies {
    implementation('org.controlsfx:controlsfx:11.1.2')
    implementation('org.postgresql:postgresql:42.5.0')

//
////    implementation 'jakarta.persistence:jakarta.persistence-api:3.1.0'
//    implementation 'javax.persistence:javax.persistence-api:2.2'
//    implementation 'jakarta.persistence:jakarta.persistence-api:2.2.3'
////    implementation 'jakarta.persistence:jakarta.persistence-api:3.0.0'
////    implementation 'org.hibernate:hibernate-core:5.6.3.Final'
//    implementation 'org.hibernate:hibernate-core:6.2.2.Final'
//
////    implementation 'javax.persistence:javax.persistence-api:2.2'
////    implementation 'javax:javaee-api:8.0.1'
//    implementation 'org.jboss.logging:jboss-logging:3.5.0.Final'
//
//    implementation 'jakarta.enterprise:jakarta.enterprise.cdi-api:4.0.1'
////    implementation 'jakarta.interceptor:jakarta.interceptor-api:2.1.0'

//    implementation 'org.hibernate:hibernate-core:5.2.10.Final'


//    implementation 'org.hibernate.orm:hibernate-core:6.2.2.Final'
//    implementation 'org.hibernate:hibernate-entitymanager:5.5.7.Final'
//    implementation 'com.h2database:h2:1.4.200'
    implementation('org.hibernate:hibernate-core:5.6.1.Final')


    testImplementation("org.junit.jupiter:junit-jupiter-api:${junitVersion}")
    testRuntimeOnly("org.junit.jupiter:junit-jupiter-engine:${junitVersion}")
}

test {
    useJUnitPlatform()
}

jlink {
    imageZip = project.file("${buildDir}/distributions/app-${javafx.platform.classifier}.zip")
    options = ['--strip-debug', '--compress', '2', '--no-header-files', '--no-man-pages']
    launcher {
        name = 'app'
    }
}

jlinkZip {
    group = 'distribution'
}